@page "/"
@using WEBDEV_CV.Models
@inject HttpClient HttpClient

<PageTitle>Index</PageTitle>

<div class="container">
    <div class="d-flex justify-content-center">
        <h1>Application Form</h1>
    </div>
    <div class="d-flex justify-content-center">
        <div class="rectangle-form-border">
            <div class="rectangle-form">
                <div class="images">
                    <img src="/images/CVimage.jpg" alt="placeholder for CV image" class="image" />
                </div>
                <div class="name justify-content-center align-items-center flex-column">
                    <p class="detail-question">FULL NAME</p>
                    <p class="details">Alexander Angove Lilja</p>
                    <p class="detail-question">AGE</p>
                    <p class="details">98 / 12 / 16</p>
                    <p class="detail-question">CURRENT OCCUPATION</p>
                    <p class="details">Student</p>
                    <p class="detail-question">CONTACT</p>
                    <p class="details">alexander.a.lilja@gmail.com</p>
                    <p class="details">0707289707</p>
                </div>
                <div class="justify-content-center align-items-center flex-column">
                    <p class="about">ABOUT</p>
                    <div class="description justify-content-center align-items-center flex-column">
                        <p>Hi there, I'm Alexander! I'm currently a student at IT-Högskolan at Göteborg studying to become a .NET Cloud Developer. My previous work experiences lie in hospitality where I've learned skills such as being very flexible in my work, always finding solutions, patience, and communication that have benefited me throughout life since then.</p>
                        <p>During my free time, I spend a lot of it watching movies with friends, playing video games, and spending time with my friends. During my time at IT-Högskolan I've developed a curiosity for coding and I'm excited to continue the journey, develop and learn more.</p>
                    </div>
                </div>
                <div class="project justify-content-center align-items-center flex-column">
                    <div class="description name justify-content-center align-items-center flex-column">
                        <div class>
                            <p class="detail-question">PROJECTS</p>
                            <p class="detail-question">C#</p>
                            <p>
                                We got the task to develop a graphic quiz game application in WPF where I had to implement features such as playing,
                                editing and creating the quizzes using a data serialization of our own choosing to save and load the data.
                            </p>
                            <p class="detail-question">DATABASE MANAGEMENT</p>
                            <p>
                                This task required me to repurpose my C# quiz game but instead of using data serialization we made use of
                                databases such as MongoDB to store our data in instead. Making the quiz game work but with an external
                                program to store it's data in.
                            </p>
                            <p class="detail-question">WEB DEVELOPMENT</p>
                            <p>
                                Our last lab for the most recent course had us make our own CV websites to use and show potential future internships.
                                We were made to make a fullstack SPA application using blazor as our frontend with different requirements of
                                things to implement that we've learned throughout previous courses and this one.
                            </p>

                            <p class="detail-question">SKILLS</p>
                            <ul>
                                @if (skills != null)
                                {
                                    @foreach (var skill in skills)
                                    {
                                        <li>@skill.Name - @skill.Experience - @skill.Level</li>
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<Skills> skills;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            skills = await HttpClient.GetFromJsonAsync<List<Skills>>("skills");
        }
        catch (Exception ex)
        {
            // Handle exception
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
}